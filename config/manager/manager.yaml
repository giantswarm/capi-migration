apiVersion: v1
kind: ConfigMap
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
data:
  VAULT_ADDR: ""
  ENSURE_VAULT_TOKEN_VAULT_ROLE: "capi-migration"
---
apiVersion: v1
kind: Secret
metadata:
  name: controller-manager-vault-token
  namespace: system
  labels:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      volumes:
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs/
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      initContainers:
      - args:
        - --vault-address=$(VAULT_ADDR)
        - --vault-role=$(ENSURE_VAULT_TOKEN_VAULT_ROLE)
        - --vault-token-secret-name=$(VAULT_TOKEN_SECRET_NAME)
        - --vault-token-secret-namespace=$(NAMESPACE)
        image: "ensure-vault-token:latest"
        imagePullPolicy: Always
        name: ensure-vault-token
        envFrom:
        - configMapRef:
            name: controller-manager
      containers:
      - command:
        - /manager
        args:
        - --enable-leader-election
        image: controller:latest
        name: manager
        env:
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: controller-manager-vault-token
              key: token
        envFrom:
        - configMapRef:
            name: controller-manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/ssl/certs/
      terminationGracePeriodSeconds: 10
      serviceAccountName: controller-manager
