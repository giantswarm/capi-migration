apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: capi-migration
  name: capi-migration-leader-election-role
  namespace: giantswarm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: capi-migration
  name: capi-migration-manager-role
rules:
- apiGroups:
  - cluster.x-k8s.io.giantswarm.io
  resources:
  - clusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io.giantswarm.io
  resources:
  - clusters/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capi-migration-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: capi-migration-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: capi-migration
  name: capi-migration-leader-election-rolebinding
  namespace: giantswarm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capi-migration-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: giantswarm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: capi-migration
  name: capi-migration-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-migration-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: giantswarm
---
apiVersion: v1
data:
  config.yaml: |
    vaultAddress: "{{ .Values.Installation.V1.Auth.Vault.Address }}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: capi-migration
    control-plane: controller-manager
  name: capi-migration-controller-manager
  namespace: giantswarm
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: capi-migration
    control-plane: controller-manager
  name: capi-migration-controller-manager-vault-token
  namespace: giantswarm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: capi-migration-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-migration-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capi-migration-controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: capi-migration
    control-plane: controller-manager
  name: capi-migration-controller-manager-metrics-service
  namespace: giantswarm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: capi-migration
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: capi-migration
    control-plane: controller-manager
  name: capi-migration-controller-manager
  namespace: giantswarm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: capi-migration
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: capi-migration
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: capi-migration-controller-manager-vault-token
        envFrom:
        - configMapRef:
            name: capi-migration-controller-manager
        image: '{{ .Values.Installation.V1.Registry.Domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}'
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      initContainers:
      - args:
        - --vault-address=${VAULT_ADDR}
        - --vault-role=capi-migration-controller-manager
        - --vault-token-secret-name=capi-migration-controller-manager-vault-token
        - --vault-token-secret-namespace=giantswarm
        envFrom:
        - configMapRef:
            name: capi-migration-controller-manager
        image: giantswarm/k8s-jwt-to-vault-token:0.1.0
        imagePullPolicy: Always
        name: ensure-vault-token
      terminationGracePeriodSeconds: 10
